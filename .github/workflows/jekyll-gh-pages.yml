# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.12.2' # здесь можно указать нужную версию Node.js
      - name: Install dependencies
        run: npm ci
      - name: code quality eslint
        run: npm run eslint
      - name: code quality prettier
        run: npm run prettier-check
  # Build job
  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.12.2' # здесь можно указать нужную версию Node.js
      - name: Install dependencies
        run: npm ci
      - name: Build with Webpack
        run: npm run build-github # здесь указывается команда для сборки проекта с помощью Webpack
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          name: github-pages
          path: dist # замените на путь к директории сборки вашего проекта

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: github-pages
          path: .
      - name: SSH Connect1
        run: mkdir ~/.ssh
      - name: SSH Connect2
        run: echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
      - name: SSH Connect3
        run: echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
      - name: Deploy to Rithor Server
        run: rsync -a --delete dist/ rithor@91.186.196.42:/home/rithor/NewsFeed
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1 # or specific "vX.X.X" version tag for this action
